name: CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  markdown-validation:
    # Temporarily disable Markdown linting until the rules are re-enabled.
    if: ${{ false }}
    name: Markdown Validation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Markdown format (markdownlint --fix)
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: |
            DOCS/INPROGRESS/**/*.md
            DOCS/COMMANDS/**/*.md
            DOCS/RULES/**/*.md
          fix: true

      - name: Fail if formatting changed files
        run: |
          if ! git diff --quiet --exit-code; then
            echo "::error::Markdown is not formatted. Run locally:"
            echo "  npx markdownlint-cli2 --fix 'DOCS/INPROGRESS/**/*.md' 'DOCS/COMMANDS/**/*.md' 'DOCS/RULES/**/*.md'"
            exit 1
          fi

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          globs: |
            DOCS/INPROGRESS/**/*.md
            DOCS/COMMANDS/**/*.md
            DOCS/RULES/**/*.md

  build-and-test:
    name: Build and Test (Ubuntu)
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: '6.0.1'

      - name: Cache SwiftPM build artifacts
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift', 'Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: swift build
        run: swift build --build-tests

      - name: swift test
        run: swift test

  docc-archives:
    name: Generate DocC Archives
    runs-on: ubuntu-22.04
    needs:
      - build-and-test
    if: ${{ needs.build-and-test.result == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Swift
        uses: SwiftyLab/setup-swift@v1
        with:
          swift-version: '6.0.1'

      - name: Cache SwiftPM build artifacts
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift', 'Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Generate DocC documentation
        run: ./scripts/generate_documentation.sh Documentation/DocC

      - name: Package DocC archives
        run: |
          tar -czf docc-archives.tar.gz -C Documentation DocC

      - name: Upload DocC archives
        uses: actions/upload-artifact@v4
        with:
          name: docc-archives
          path: docc-archives.tar.gz
          if-no-files-found: error
          retention-days: 14

